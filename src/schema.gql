# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ArtLayer {
  type: String!
  url: String!
}

input ArtLayerInput {
  type: String!
  url: String!
}

type Asset {
  artLayers: [ArtLayer!]!
  createdAt: DateTime!
  id: String!
  status: String!
  updatedAt: DateTime!
}

input AssetInput {
  artLayers: [ArtLayerInput!]!
}

type Character {
  contract: String
  createdAt: DateTime!
  down: Sprite
  id: String!
  left: Sprite!
  right: Sprite!
  status: String!
  tokenId: Float!
  up: Sprite
  updatedAt: DateTime!
}

input CharacterInput {
  contract: ID
  down: SpriteInput
  left: SpriteInput!
  right: SpriteInput!
  tokenId: Float!
  up: SpriteInput
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Interaction {
  bottomRight: [Int!]!
  topLeft: [Int!]!
  type: String!
  url: String
}

input InteractionInput {
  bottomRight: [Int!]!
  topLeft: [Int!]!
  type: String!
  url: String
}

type Map {
  createdAt: DateTime!
  id: String!
  interactions: [Interaction!]!
  name: String!
  placements: [Placement!]!
  status: String!
  tileSize: Int!
  tiles: [[Tile!]!]!
  updatedAt: DateTime!
}

input MapInput {
  interactions: [InteractionInput!]!
  name: String!
  placements: [PlacementInput!]!
  tileSize: Int!
  tiles: [[TileInput!]!]!
}

type Mutation {
  createAsset(data: AssetInput!): Asset!
  createCharacter(data: CharacterInput!): Character!
  createMap(data: MapInput!): Map!
  removeAsset(assetId: String!): Asset!
  removeCharacter(characterId: String!): Character!
  removeMap(mapId: String!): Map!
  updateAsset(assetId: String!, data: AssetInput!): Asset!
  updateCharacter(characterId: String!, data: CharacterInput!): Character!
  updateMap(data: MapInput!, mapId: String!): Map!
}

type OpenSeaAttribute {
  display_type: String
  trait_type: String!
  value: String!
}

type OpenSeaMeta {
  attributes: [OpenSeaAttribute!]!
  description: String!
  external_url: String!
  image: String!
  name: String!
}

type Placement {
  asset: ID!
  position: [Int!]!
}

input PlacementInput {
  asset: ID!
  position: [Int!]!
}

type Query {
  asset(assetId: String!): Asset!
  assets: [Asset!]!
  character(characterId: String!): Character!
  characters: [Character!]!
  map(mapId: String!): Map!
  maps: [Map!]!
  sayHello: String!
}

type Sprite {
  idle: String!
  walk: String!
}

input SpriteInput {
  idle: String!
  walk: String!
}

type Tile {
  bottom: String!
  interactions: String!
  lighting: String!
  top: String!
}

input TileInput {
  bottom: String!
  interactions: String!
  lighting: String!
  top: String!
}